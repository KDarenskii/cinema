{"version":3,"file":"static/js/Actor.1b40eb54.chunk.js","mappings":"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","sources":["components/Description/DescriptionHeader/index.tsx","components/Description/DescriptionInfo/DescriptionInfoItem/index.tsx","components/Description/DescriptionInfo/index.tsx","components/Description/DescriptionList/index.tsx","components/Description/DescriptionPoster/index.tsx","components/Actor/index.tsx","services/ActorService.ts","pages/ActorPage/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nimport \"./styles.scss\";\r\n\r\ntype Props = {\r\n    title: string;\r\n    overview?: string;\r\n    className?: string;\r\n};\r\n\r\nconst DescriptionHeader: React.FC<Props> = ({ title, overview, className }) => {\r\n    return (\r\n        <header className={cn(\"description-header\", className)}>\r\n            <h1 className=\"description-header__title\">{title}</h1>\r\n            {overview && <p className=\"description-header__overview\">{overview}</p>}\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default DescriptionHeader;\r\n","import React from \"react\";\r\n\r\nimport \"./styles.scss\";\r\n\r\ntype Props = {\r\n    name: string;\r\n    value: string | string[];\r\n};\r\n\r\nconst DescriptionInfoItem: React.FC<Props> = ({ name, value }) => {\r\n    return (\r\n        <li className=\"description-item\">\r\n            <div className=\"description-item__name\">{name}</div>\r\n            <div className=\"description-item__values-wrapper\">\r\n                {Array.isArray(value) ? (\r\n                    value.map((item, index) => (\r\n                        <span className=\"description-item__value\" key={index}>\r\n                            {item}\r\n                        </span>\r\n                    ))\r\n                ) : (\r\n                    <span className=\"description-item__value\">{value}</span>\r\n                )}\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default DescriptionInfoItem;\r\n","import React from \"react\";\r\n\r\nimport \"./styles.scss\";\r\n\r\ntype Props = {\r\n    title: string;\r\n    children: React.ReactNode;\r\n};\r\n\r\nconst DescriptionInfo: React.FC<Props> = ({ children, title }) => {\r\n    return (\r\n        <div className=\"description-info\">\r\n            <h4 className=\"description-info__title\">{title}</h4>\r\n            <ul className=\"description-info__list\">{children}</ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DescriptionInfo;\r\n","import React from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nimport \"./styles.scss\";\r\n\r\ntype Props = {\r\n    title: string;\r\n    children: React.ReactNode;\r\n    className?: string;\r\n};\r\n\r\nconst DescriptionList: React.FC<Props> = ({ title, children, className }) => {\r\n    return (\r\n        <div className={cn(\"description-list\", className)}>\r\n            <h5 className=\"description-list__title\">{title}</h5>\r\n            <ul className=\"description-list__list\">{children}</ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DescriptionList;\r\n","import React from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nimport \"./styles.scss\";\r\n\r\ntype Props = {\r\n    src: string;\r\n    className?: string;\r\n}\r\n\r\nconst DescriptionPoster: React.FC<Props> = ({ src, className }) => {\r\n    return (\r\n        <div className={cn('description-poster', className)}>\r\n            <img className=\"description-poster__img\" src={src} alt=\"Poster\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DescriptionPoster;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IActor } from \"../../models/actor\";\r\nimport DescriptionHeader from \"../Description/DescriptionHeader\";\r\nimport DescriptionInfo from \"../Description/DescriptionInfo\";\r\nimport DescriptionInfoItem from \"../Description/DescriptionInfo/DescriptionInfoItem\";\r\nimport DescriptionList from \"../Description/DescriptionList\";\r\nimport DescriptionPoster from \"../Description/DescriptionPoster\";\r\n\r\nimport \"./styles.scss\";\r\n\r\ntype Props = {\r\n    actor: IActor;\r\n    className?: string;\r\n};\r\n\r\nconst Actor: React.FC<Props> = ({ actor }) => {\r\n    return (\r\n        <section className=\"actor\">\r\n            <div className=\"actor__intro\">\r\n                <DescriptionPoster className=\"actor__intro-poster\" src={actor.posterSrc} />\r\n            </div>\r\n\r\n            <div className=\"actor__content\">\r\n                <DescriptionHeader className=\"actor__content-header\" title={actor.name} />\r\n\r\n                <DescriptionPoster className=\"actor__content-intro-poster\" src={actor.posterSrc} />\r\n\r\n                <div className=\"actor__content-about\">\r\n                    <DescriptionInfo title=\"About person\">\r\n                        <DescriptionInfoItem name=\"Career\" value={actor.career} />\r\n                        <DescriptionInfoItem name=\"Height\" value={actor.height + \" cm\"} />\r\n                        <DescriptionInfoItem\r\n                            name=\"Birthplace\"\r\n                            value={[actor.birthplace?.city, actor.birthplace?.state, actor.birthplace?.country]}\r\n                        />\r\n                        <DescriptionInfoItem name=\"Genres\" value={actor.genres} />\r\n                        <DescriptionInfoItem name=\"Movies amount\" value={String(actor.filmsNumber)} />\r\n                    </DescriptionInfo>\r\n\r\n                    <DescriptionList className=\"actor__content-about-list\" title=\"Best films\">\r\n                        {actor.bestWorks &&\r\n                            actor.bestWorks.map((work, index) => (\r\n                                <Link className=\"actor__content-about-link\" to={\"/cinema/film/\" + work.id} key={index}>\r\n                                    {work.title}\r\n                                </Link>\r\n                            ))}\r\n                    </DescriptionList>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Actor;\r\n","import { AxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport { api } from \"../api\"\r\nimport { IActor } from \"../models/actor\";\r\n\r\nexport default class ActorService {\r\n    static fetchActortById = async (id: string, config?: AxiosRequestConfig): Promise<AxiosResponse<IActor>> => {\r\n        return api.get<IActor>(\"actors/\" + id, config);\r\n    }\r\n}","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Actor from \"../../components/Actor\";\r\nimport PageLoader from \"../../components/PageLoader\";\r\nimport RetryError from \"../../components/RetryError\";\r\nimport { IActor } from \"../../models/actor\";\r\nimport ActorService from \"../../services/ActorService\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst ActorPage: React.FC = () => {\r\n    \r\n    const { id = \"\" } = useParams();\r\n\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [error, setError] = React.useState<string | null>(null);\r\n    const [actor, setActor] = React.useState({} as IActor);\r\n\r\n    const fetchActor = React.useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await ActorService.fetchActortById(id);\r\n            setActor(response.data);\r\n        } catch (error) {\r\n            const err = error as any;\r\n            setError(err.message ?? null);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [id]);\r\n\r\n    React.useEffect(() => {\r\n        fetchActor();\r\n    }, [fetchActor]);\r\n\r\n    return (\r\n        <div className=\"actor-page\">\r\n            {error && <RetryError onClick={fetchActor} message={error} />}\r\n            {isLoading && <PageLoader />}\r\n            {!error && !isLoading && <Actor actor={actor} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActorPage;\r\n"],"names":["title","overview","className","cn","name","value","Array","isArray","map","item","index","children","src","alt","actor","DescriptionPoster","posterSrc","DescriptionHeader","DescriptionInfo","DescriptionInfoItem","career","height","birthplace","city","state","country","genres","String","filmsNumber","DescriptionList","bestWorks","work","to","id","ActorService","fetchActortById","config","api","useParams","React","isLoading","setIsLoading","error","setError","setActor","fetchActor","response","data","err","message","RetryError","onClick","PageLoader"],"sourceRoot":""}